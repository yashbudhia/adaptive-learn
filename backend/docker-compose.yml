version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: adaptive_boss_postgres
    environment:
      POSTGRES_DB: adaptive_boss_db
      POSTGRES_USER: adaptive_user
      POSTGRES_PASSWORD: adaptive_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U adaptive_user -d adaptive_boss_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: adaptive_boss_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adaptive Boss API
  api:
    build: .
    container_name: adaptive_boss_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://adaptive_user:adaptive_password@postgres:5432/adaptive_boss_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JIGSAWSTACK_API_KEY=${JIGSAWSTACK_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
